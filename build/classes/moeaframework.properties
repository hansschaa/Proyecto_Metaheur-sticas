## =======================
##  General Configuration
## =======================

## Enables verbose logging.
#org.moeaframework.core.verbose = true

## By default, non-dominated populations do not allow two solutions with nearly identical objective values.  This
## behavior can be modified:
##   NO_DUPLICATE_OBJECTIVES - Do not allow solutions with nearly identical objectives
##   ALLOW_DUPLICATE_OBJECTIVES - Allow solutions with identical objectives if they have different decision variables
##   ALLOW_DUPLICATES - Allow all duplicate solutions (use caution since the size of the population can grow large)
#org.moeaframework.core.duplicate_mode = NO_DUPLICATE_OBJECTIVES

## Non-dominated sorting is used in algorithms like NSGA-II to rank solutions.  There are two implementations available:
## the "fast" version and the "naive" version.  The fast version has a worst case time complexity of O(MN^2) versus
## O(MN^3) of the naive implementation, where M is the number of objectives and N is the number of solutions.  However,
## the naive implementations tends to have a faster average time and is used by default.  Use this setting to enable
## or disable fast non-dominated sorting.  If speed is a concern, we recommend comparing both options.
#org.moeaframework.core.fast_nondominated_sorting = false

## When a property is given as a real-value but needs to be converted to an integer, we implicitly allow truncating the
## decimal places.  This allows, for example, automatically converting parameter inputs generated for sensitivity
## analysis.  This can hide changes made to parameters. Set this to false to display any conversions.
#org.moeaframework.core.suppress_truncation_warning = false

## Genetic programming functions are by default protected against returning NaN or other invalid numbers.  Unless
## protected against, these invalid values propagate throughout the expression and corrupt the results.  This feature
## can be disabled by setting this option to false.
#org.moeaframework.util.tree.protected_functions = false

## Options related to external problems, including enabling debugging, retry options, etc.  Times are given in seconds.
#org.moeaframework.problem.external.enable_debugging = true
#org.moeaframework.problem.external.retry_attempts = 5
#org.moeaframework.problem.external.retry_delay = 1
#org.moeaframework.problem.external.shutdown_timeout = 10

## Rank-based statistical inference methods, such as the Mann-Whitney U test and the Wilcoxon Signed-Ranks test,
## approximate the test's discrete distribution with a continuous distribution for computing the p-value.  It has been
## recommended but not often employed in practice to apply a continuity correction.  When this flag is set to true,
## such tests include continuity correction.
#org.moeaframework.util.statistics.continuity_correction = false

## Enables consistency checking by default on all CMA-ES instances to ensure the algorithm remains numerically stable.
## This setting can be overridden on specific instances of the algorithm.
#org.moeaframework.algorithm.cmaes.check_consistency = true

## Normally, the pseudo-random number generator (PRNG) is initialized using a source of randomness, typically the
## system time.  This setting allows fixing the seed to make results reproducible.  Note that the seed is set exactly
## once during initialization.
#org.moeaframework.core.prng.seed = 12345

## Configures the display width when displaying help messages in the terminal.
#org.moeaframework.core.help.width = 160

## ===========================
##  Problem-Specific Settings
## ===========================

## By default, normalized performance indicators use the bounds of the reference set.  These bounds can be customized
## for specific problems.  The last value in the array is repeated, as required, so 2 would expand to (2, 2, ..., 2).
#org.moeaframework.problem.DTLZ3.normalization.minimum = 0
#org.moeaframework.problem.DTLZ3.normalization.maximum = 2

## Alternatively, normalization can be disabled on specific problem instances:
#org.moeaframework.problem.DTLZ3.normalization.disabled = true

## Specify a problem-specific delta value used by the hypervolume metric.  Note that this value is only used when
## deriving the bounds from a reference set.  Any problem-specific minimum / maximum bounds will take precedence.
#org.moeaframework.problem.DTLZ3.normalization.delta = 0.2

## We also provide default epsilon values for use by algorithms, archives, and other objects based on epsilon
## dominance.  These defaults can be changed for specific problems.
#org.moeaframework.problem.DTLZ3.epsilons = 0.1


## ========================
##  Performance Indicators
## ========================

## The generational distance (GD) and inverted generational distance (IGD) indicators are typically computed using some
## power d.  In the literature, typically GD uses d=2.0 and IGD uses d=1.0.
#org.moeaframework.core.indicator.gd.power = 2.0
#org.moeaframework.core.indicator.igd.power = 1.0

## When calculating the reference point for the hypervolume calculation, the nadir point of the reference set is offset
## by the delta factor (e.g., min + delta*(max-min)).  A small but non-zero delta is recommended.
#org.moeaframework.core.indicator.hypervolume.delta = 0.01

## Customizes the hypervolume implementation.  Can be set to "wfg" (default) or "pisa" to use one of the built-in
## implementations.  Any other value will be interpreted as a command-line program for evaluating the hypervolume.
## See https://github.com/MOEAFramework/Hypervolume for more details.
#org.moeaframework.core.indicator.hypervolume = pisa
#org.moeaframework.core.indicator.hypervolume = ./wfg2.exe {2}
#org.moeaframework.core.indicator.hypervolume = ./hoy.exe {0} {1} {2} {3} 

## By default, hypervolume calculations are given the minimized approximation set, so the reference point is at
## (1, 1, ..., 1).  If the custom hypervolume implementation requires maximized sets, such that the reference point is
## at (0, 0, ..., 0), set this option to true.
#org.moeaframework.core.indicator.hypervolume.inverted = true

## In cases where the default or custom hypervolume implementations are computationally prohibitive, the hypervolume
## indicator can be disabled.  When disabled, the hypervolume will be reported as NaN.
#org.moeaframework.core.indicator.hypervolume.enabled = false


## =================
##  Custom Problems
## =================

## The following registers custom problems that can be accessed through the ProblemFactory or Executor, specifying the
## fully-qualified class name and optional reference set.  This is provided for backwards compatibility, but moving
## forward we recommend creating a RegisteredProblemProvider instead.
#org.moeaframework.problem.TestLZ1.class = org.moeaframework.problem.LZ.LZ1
#org.moeaframework.problem.TestLZ1.referenceSet = ./pf/LZ09_F1.pf


## =================
##  Diagnostic Tool
## =================

## The Diagnostic Tool, by default, shows all available algorithms and problems.  However, we can limit the available
## options by providing comma-separated lists below.
#org.moeaframework.analysis.diagnostics.algorithms = NSGAII, GDE3, eMOEA
#org.moeaframework.analysis.diagnostics.problems = ZDT1, ZDT2, ZDT3, ZDT4, ZDT5, ZDT6
